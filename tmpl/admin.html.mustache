<!doctype html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link rel="stylesheet" href="/css/base.css">
        <link rel="stylesheet" href="/css/skeleton.css">
        <link rel="stylesheet" href="/css/layout.css">
        <title>{{{PageTitle}}}</title>
    </head>
    <body>
        <div class="container">
            <div id="header">
                <br />
                {{> header}}
            </div>
            <hr />
            <div id="subheader">
                <h3 class="alt">Subhello</h3>
            </div>

            <hr />
            <div class="twelve columns content" id="content">
                <label for="post_dropdown">Post:</label>
                <select id="post_dropdown" onchange="retrieveComments(this.value);">
                    <option value="" style="display:none;" selected></option>
{{#entries}}
                    <option value="{{Url}}">{{Title}}</option>
{{/entries}}
                </select>
                <br />
                <label for="comments_dropdown">Comments:</label>
                <select id="comments_dropdown">
                </select>
                <br />
                <label for="post_body">Post text:</label>
                <textarea style="width: 80%" id="post_body"></textarea>
            </div>

            {{> sidebar}}

            <hr />
            <div id="footer" />
        </div>
        <script type="text/javascript">
        function makeCommentList(post) {
            var result = "";
            for (i in post.Comments) {
                var c = post.Comments[i];
                result += "<option value=\"" + c.Name + "\">" + c.RawBody + "</option>";
            }
            return result;
        }

        function retrieveComments(postUrl) {
            var xhr;
            try {
                xhr = new ActiveXObject('Msxml2.XMLHTTP');
            }
            catch (e) {
                try {
                    xhr = new ActiveXObject('Microsoft.XMLHTTP');
                }
                catch (e2) {
                    try {
                        xhr = new XMLHttpRequest();
                    }
                    catch (e3) {
                        xhr = false;
                    }
                }
            }

            xhr.onreadystatechange = function() {
                if(xhr.readyState == 4) {
                    if(xhr.status == 200) {
                        var post = JSON.parse(xhr.responseText);
                        document.getElementById('post_body').innerHTML = post.RawBody;
                        document.getElementById('comments_dropdown').innerHTML = makeCommentList(post);
                    }
                    else {
                        document.getElementById('comments_dropdown').innerHTML = xhr.status;
                    }
                }
            };

            try {
                xhr.open("GET", "load_comments?post=" + postUrl, true);
                xhr.send(null);
            }
            catch (err) {
                alert("exc: " + err);
            }
        }
        </script>
    </body>
</html>
